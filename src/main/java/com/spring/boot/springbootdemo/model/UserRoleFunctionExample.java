package com.spring.boot.springbootdemo.model;

import java.util.ArrayList;
import java.util.List;

public class UserRoleFunctionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    public UserRoleFunctionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andLoginIDIsNull() {
            addCriterion("LoginID is null");
            return (Criteria) this;
        }

        public Criteria andLoginIDIsNotNull() {
            addCriterion("LoginID is not null");
            return (Criteria) this;
        }

        public Criteria andLoginIDEqualTo(String value) {
            addCriterion("LoginID =", value, "loginID");
            return (Criteria) this;
        }

        public Criteria andLoginIDNotEqualTo(String value) {
            addCriterion("LoginID <>", value, "loginID");
            return (Criteria) this;
        }

        public Criteria andLoginIDGreaterThan(String value) {
            addCriterion("LoginID >", value, "loginID");
            return (Criteria) this;
        }

        public Criteria andLoginIDGreaterThanOrEqualTo(String value) {
            addCriterion("LoginID >=", value, "loginID");
            return (Criteria) this;
        }

        public Criteria andLoginIDLessThan(String value) {
            addCriterion("LoginID <", value, "loginID");
            return (Criteria) this;
        }

        public Criteria andLoginIDLessThanOrEqualTo(String value) {
            addCriterion("LoginID <=", value, "loginID");
            return (Criteria) this;
        }

        public Criteria andLoginIDLike(String value) {
            addCriterion("LoginID like", value, "loginID");
            return (Criteria) this;
        }

        public Criteria andLoginIDNotLike(String value) {
            addCriterion("LoginID not like", value, "loginID");
            return (Criteria) this;
        }

        public Criteria andLoginIDIn(List<String> values) {
            addCriterion("LoginID in", values, "loginID");
            return (Criteria) this;
        }

        public Criteria andLoginIDNotIn(List<String> values) {
            addCriterion("LoginID not in", values, "loginID");
            return (Criteria) this;
        }

        public Criteria andLoginIDBetween(String value1, String value2) {
            addCriterion("LoginID between", value1, value2, "loginID");
            return (Criteria) this;
        }

        public Criteria andLoginIDNotBetween(String value1, String value2) {
            addCriterion("LoginID not between", value1, value2, "loginID");
            return (Criteria) this;
        }

        public Criteria andLastNameIsNull() {
            addCriterion("LastName is null");
            return (Criteria) this;
        }

        public Criteria andLastNameIsNotNull() {
            addCriterion("LastName is not null");
            return (Criteria) this;
        }

        public Criteria andLastNameEqualTo(String value) {
            addCriterion("LastName =", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameNotEqualTo(String value) {
            addCriterion("LastName <>", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameGreaterThan(String value) {
            addCriterion("LastName >", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameGreaterThanOrEqualTo(String value) {
            addCriterion("LastName >=", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameLessThan(String value) {
            addCriterion("LastName <", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameLessThanOrEqualTo(String value) {
            addCriterion("LastName <=", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameLike(String value) {
            addCriterion("LastName like", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameNotLike(String value) {
            addCriterion("LastName not like", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameIn(List<String> values) {
            addCriterion("LastName in", values, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameNotIn(List<String> values) {
            addCriterion("LastName not in", values, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameBetween(String value1, String value2) {
            addCriterion("LastName between", value1, value2, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameNotBetween(String value1, String value2) {
            addCriterion("LastName not between", value1, value2, "lastName");
            return (Criteria) this;
        }

        public Criteria andRoleNameIsNull() {
            addCriterion("roleName is null");
            return (Criteria) this;
        }

        public Criteria andRoleNameIsNotNull() {
            addCriterion("roleName is not null");
            return (Criteria) this;
        }

        public Criteria andRoleNameEqualTo(String value) {
            addCriterion("roleName =", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameNotEqualTo(String value) {
            addCriterion("roleName <>", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameGreaterThan(String value) {
            addCriterion("roleName >", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameGreaterThanOrEqualTo(String value) {
            addCriterion("roleName >=", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameLessThan(String value) {
            addCriterion("roleName <", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameLessThanOrEqualTo(String value) {
            addCriterion("roleName <=", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameLike(String value) {
            addCriterion("roleName like", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameNotLike(String value) {
            addCriterion("roleName not like", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameIn(List<String> values) {
            addCriterion("roleName in", values, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameNotIn(List<String> values) {
            addCriterion("roleName not in", values, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameBetween(String value1, String value2) {
            addCriterion("roleName between", value1, value2, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameNotBetween(String value1, String value2) {
            addCriterion("roleName not between", value1, value2, "roleName");
            return (Criteria) this;
        }

        public Criteria andFunnameIsNull() {
            addCriterion("funname is null");
            return (Criteria) this;
        }

        public Criteria andFunnameIsNotNull() {
            addCriterion("funname is not null");
            return (Criteria) this;
        }

        public Criteria andFunnameEqualTo(String value) {
            addCriterion("funname =", value, "funname");
            return (Criteria) this;
        }

        public Criteria andFunnameNotEqualTo(String value) {
            addCriterion("funname <>", value, "funname");
            return (Criteria) this;
        }

        public Criteria andFunnameGreaterThan(String value) {
            addCriterion("funname >", value, "funname");
            return (Criteria) this;
        }

        public Criteria andFunnameGreaterThanOrEqualTo(String value) {
            addCriterion("funname >=", value, "funname");
            return (Criteria) this;
        }

        public Criteria andFunnameLessThan(String value) {
            addCriterion("funname <", value, "funname");
            return (Criteria) this;
        }

        public Criteria andFunnameLessThanOrEqualTo(String value) {
            addCriterion("funname <=", value, "funname");
            return (Criteria) this;
        }

        public Criteria andFunnameLike(String value) {
            addCriterion("funname like", value, "funname");
            return (Criteria) this;
        }

        public Criteria andFunnameNotLike(String value) {
            addCriterion("funname not like", value, "funname");
            return (Criteria) this;
        }

        public Criteria andFunnameIn(List<String> values) {
            addCriterion("funname in", values, "funname");
            return (Criteria) this;
        }

        public Criteria andFunnameNotIn(List<String> values) {
            addCriterion("funname not in", values, "funname");
            return (Criteria) this;
        }

        public Criteria andFunnameBetween(String value1, String value2) {
            addCriterion("funname between", value1, value2, "funname");
            return (Criteria) this;
        }

        public Criteria andFunnameNotBetween(String value1, String value2) {
            addCriterion("funname not between", value1, value2, "funname");
            return (Criteria) this;
        }

        public Criteria andPidIsNull() {
            addCriterion("pid is null");
            return (Criteria) this;
        }

        public Criteria andPidIsNotNull() {
            addCriterion("pid is not null");
            return (Criteria) this;
        }

        public Criteria andPidEqualTo(Integer value) {
            addCriterion("pid =", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotEqualTo(Integer value) {
            addCriterion("pid <>", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThan(Integer value) {
            addCriterion("pid >", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThanOrEqualTo(Integer value) {
            addCriterion("pid >=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThan(Integer value) {
            addCriterion("pid <", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThanOrEqualTo(Integer value) {
            addCriterion("pid <=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidIn(List<Integer> values) {
            addCriterion("pid in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotIn(List<Integer> values) {
            addCriterion("pid not in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidBetween(Integer value1, Integer value2) {
            addCriterion("pid between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotBetween(Integer value1, Integer value2) {
            addCriterion("pid not between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andFunctionIDIsNull() {
            addCriterion("functionID is null");
            return (Criteria) this;
        }

        public Criteria andFunctionIDIsNotNull() {
            addCriterion("functionID is not null");
            return (Criteria) this;
        }

        public Criteria andFunctionIDEqualTo(Integer value) {
            addCriterion("functionID =", value, "functionID");
            return (Criteria) this;
        }

        public Criteria andFunctionIDNotEqualTo(Integer value) {
            addCriterion("functionID <>", value, "functionID");
            return (Criteria) this;
        }

        public Criteria andFunctionIDGreaterThan(Integer value) {
            addCriterion("functionID >", value, "functionID");
            return (Criteria) this;
        }

        public Criteria andFunctionIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("functionID >=", value, "functionID");
            return (Criteria) this;
        }

        public Criteria andFunctionIDLessThan(Integer value) {
            addCriterion("functionID <", value, "functionID");
            return (Criteria) this;
        }

        public Criteria andFunctionIDLessThanOrEqualTo(Integer value) {
            addCriterion("functionID <=", value, "functionID");
            return (Criteria) this;
        }

        public Criteria andFunctionIDIn(List<Integer> values) {
            addCriterion("functionID in", values, "functionID");
            return (Criteria) this;
        }

        public Criteria andFunctionIDNotIn(List<Integer> values) {
            addCriterion("functionID not in", values, "functionID");
            return (Criteria) this;
        }

        public Criteria andFunctionIDBetween(Integer value1, Integer value2) {
            addCriterion("functionID between", value1, value2, "functionID");
            return (Criteria) this;
        }

        public Criteria andFunctionIDNotBetween(Integer value1, Integer value2) {
            addCriterion("functionID not between", value1, value2, "functionID");
            return (Criteria) this;
        }

        public Criteria andUrlIsNull() {
            addCriterion("url is null");
            return (Criteria) this;
        }

        public Criteria andUrlIsNotNull() {
            addCriterion("url is not null");
            return (Criteria) this;
        }

        public Criteria andUrlEqualTo(String value) {
            addCriterion("url =", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotEqualTo(String value) {
            addCriterion("url <>", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThan(String value) {
            addCriterion("url >", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThanOrEqualTo(String value) {
            addCriterion("url >=", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLessThan(String value) {
            addCriterion("url <", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLessThanOrEqualTo(String value) {
            addCriterion("url <=", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLike(String value) {
            addCriterion("url like", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotLike(String value) {
            addCriterion("url not like", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlIn(List<String> values) {
            addCriterion("url in", values, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotIn(List<String> values) {
            addCriterion("url not in", values, "url");
            return (Criteria) this;
        }

        public Criteria andUrlBetween(String value1, String value2) {
            addCriterion("url between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotBetween(String value1, String value2) {
            addCriterion("url not between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andFuncodeIsNull() {
            addCriterion("funcode is null");
            return (Criteria) this;
        }

        public Criteria andFuncodeIsNotNull() {
            addCriterion("funcode is not null");
            return (Criteria) this;
        }

        public Criteria andFuncodeEqualTo(String value) {
            addCriterion("funcode =", value, "funcode");
            return (Criteria) this;
        }

        public Criteria andFuncodeNotEqualTo(String value) {
            addCriterion("funcode <>", value, "funcode");
            return (Criteria) this;
        }

        public Criteria andFuncodeGreaterThan(String value) {
            addCriterion("funcode >", value, "funcode");
            return (Criteria) this;
        }

        public Criteria andFuncodeGreaterThanOrEqualTo(String value) {
            addCriterion("funcode >=", value, "funcode");
            return (Criteria) this;
        }

        public Criteria andFuncodeLessThan(String value) {
            addCriterion("funcode <", value, "funcode");
            return (Criteria) this;
        }

        public Criteria andFuncodeLessThanOrEqualTo(String value) {
            addCriterion("funcode <=", value, "funcode");
            return (Criteria) this;
        }

        public Criteria andFuncodeLike(String value) {
            addCriterion("funcode like", value, "funcode");
            return (Criteria) this;
        }

        public Criteria andFuncodeNotLike(String value) {
            addCriterion("funcode not like", value, "funcode");
            return (Criteria) this;
        }

        public Criteria andFuncodeIn(List<String> values) {
            addCriterion("funcode in", values, "funcode");
            return (Criteria) this;
        }

        public Criteria andFuncodeNotIn(List<String> values) {
            addCriterion("funcode not in", values, "funcode");
            return (Criteria) this;
        }

        public Criteria andFuncodeBetween(String value1, String value2) {
            addCriterion("funcode between", value1, value2, "funcode");
            return (Criteria) this;
        }

        public Criteria andFuncodeNotBetween(String value1, String value2) {
            addCriterion("funcode not between", value1, value2, "funcode");
            return (Criteria) this;
        }

        public Criteria andFunTypeIsNull() {
            addCriterion("funType is null");
            return (Criteria) this;
        }

        public Criteria andFunTypeIsNotNull() {
            addCriterion("funType is not null");
            return (Criteria) this;
        }

        public Criteria andFunTypeEqualTo(Integer value) {
            addCriterion("funType =", value, "funType");
            return (Criteria) this;
        }

        public Criteria andFunTypeNotEqualTo(Integer value) {
            addCriterion("funType <>", value, "funType");
            return (Criteria) this;
        }

        public Criteria andFunTypeGreaterThan(Integer value) {
            addCriterion("funType >", value, "funType");
            return (Criteria) this;
        }

        public Criteria andFunTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("funType >=", value, "funType");
            return (Criteria) this;
        }

        public Criteria andFunTypeLessThan(Integer value) {
            addCriterion("funType <", value, "funType");
            return (Criteria) this;
        }

        public Criteria andFunTypeLessThanOrEqualTo(Integer value) {
            addCriterion("funType <=", value, "funType");
            return (Criteria) this;
        }

        public Criteria andFunTypeIn(List<Integer> values) {
            addCriterion("funType in", values, "funType");
            return (Criteria) this;
        }

        public Criteria andFunTypeNotIn(List<Integer> values) {
            addCriterion("funType not in", values, "funType");
            return (Criteria) this;
        }

        public Criteria andFunTypeBetween(Integer value1, Integer value2) {
            addCriterion("funType between", value1, value2, "funType");
            return (Criteria) this;
        }

        public Criteria andFunTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("funType not between", value1, value2, "funType");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table v_user_role_function
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table v_user_role_function
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}