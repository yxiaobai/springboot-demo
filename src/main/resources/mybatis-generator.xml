<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <context id="MysqlTables" targetRuntime="MyBatis3">
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <plugin type="org.mybatis.generator.plugins.MySQLPaginationPlugin"></plugin>
        <commentGenerator type="org.mybatis.generator.MyCommentGenerator">
            <!--<property name="javaFileEncoding" value="UTF-8"/>
            &lt;!&ndash;关闭时间注释 &ndash;&gt;
            <property name="suppressDate" value="true"/>
            &lt;!&ndash; 是否去除自动生成的注释 true：是 ： false:否 &ndash;&gt;
            <property name="suppressAllComments" value="false"/>-->
        </commentGenerator>
        <!--数据库链接地址账号密码-->
        <jdbcConnection
                driverClass="com.mysql.jdbc.Driver"
                connectionURL="jdbc:mysql://localhost:3306/oms?useSSL=false&amp;serverTimezone=UTC"
                userId="root"
                password="root">
        </jdbcConnection>
        <javaTypeResolver>
            <!--默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer-->
            <!--true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal-->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!--生成Model类存放位置-->
        <javaModelGenerator targetPackage="com.spring.boot.springbootdemo.model" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!--生成XML映射文件存放位置-->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!--生成Dao类存放位置-->
        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.spring.boot.springbootdemo.mapper.mbg" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>
        <!--生成对应表及类名-->
        <!--<table tableName="T_user" domainObjectName="TUser"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
        </table>-->
        <!--这样会同时生成  example  Criteria  方法     如果不需要用上面的就可以-->
        <table tableName="t_storage" domainObjectName="Storage">
            <property name="useActualColumnNames" value="false" />
            <generatedKey column="ID" sqlStatement="MySql" identity="true"/>
            <!--这样会把text等特大类型的字段转换成String类型-->
            <!--<columnOverride column="xxxxx" jdbcType="VARCHAR" />-->
        </table>

    </context>
</generatorConfiguration>